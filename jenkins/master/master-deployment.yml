apiVersion: v1
kind: Namespace
metadata:
  name: jenkins

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-claim
  namespace: jenkins
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-control
  labels:
    app.kubernetes/name: jenkins-control
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes/name: jenkins-control
  template:
    metadata:
      labels:
        app.kubernetes/name: jenkins-control
    spec:
      containers:
      - name: jenkins
        image: jenkins/jenkins:lts
        ports:
        - name: http-port
          containerPort: 8080
        - name: jnlp-port
          containerPort: 50000
        volumeMounts:
        - name: www
          mountPath: '/var/jenkins_home'
      volumes:
      - name: www
        persistentVolumeClaim:
          claimName: jenkins-claim
---

apiVersion: "v1"
kind: "Service"
metadata:
  labels:
    app: jenkins-svc
  namespace: jenkins
  name: jenkins-service
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: jnlp
    port: 50000
    targetPort: 50000
  selector:
    app.kubernetes/name: jenkins-control

# ---

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   labels:
#     app: jenkins-control
#   namespace: jenkins
#   name: jenkins-ingress
# spec:
#   rules:
#   - host: jenkins
#     http:
#       paths:
#       - pathType: Prefix
#         path: "/"
#         backend:
#           service:
#             name: jenkins-service
#             port: 
#               number: 80

# ...