apiVersion: v1
kind: Namespace
metadata:
  name: jenkins

---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: jenkins
#   labels:
#     type: local
# spec:
#   storageClassName: manual
#   capacity:
#     storage: 4Gi
#   accessModes:
#     - ReadWriteOnce
#   hostPath:
#     path: "/mnt/data"

# ---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-claim
  namespace: jenkins
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-control
  labels:
    app.kubernetes/name: jenkins-control
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes/name: jenkins-control
  template:
    metadata:
      labels:
        app.kubernetes/name: jenkins-control
    spec:
      containers:
      - name: jenkins
        image: docker.io/jenkins/jenkins
        env:
        - name: JAVA_OPTS
          value: -Xmx2048m -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
        resources:
          limits:
            memory: "600Mi"
            cpu: "800m"
        ports:
        - name: http-port
          containerPort: 8080
        - name: jnlp-port
          containerPort: 50000
        volumeMounts:
        - name: www
          mountPath: '/var/jenkins_home'
      restartPolicy: Always
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 30
      volumes:
      - name: www
        persistentVolumeClaim:
          claimName: jenkins-claim
---

apiVersion: "v1"
kind: "Service"
metadata:
  labels:
    app: jenkins-svc
  namespace: jenkins
  name: jenkins-service
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: jnlp
    port: 50000
    targetPort: 50000
  - name: ui
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app.kubernetes/name: jenkins-control

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: jenkins-control
  namespace: jenkins
  name: jenkins-ingress
spec:
  rules:
  - host: jenkins
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: jenkins-service
            port: 
              number: 8080

...