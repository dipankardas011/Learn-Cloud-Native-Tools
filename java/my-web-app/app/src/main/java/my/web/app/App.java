/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package my.web.app;
import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;

import java.io.*;
import java.net.InetSocketAddress;
import java.util.Scanner;


public class App {
    public String getGreeting() {
        return "Server Starting.....";
    }

    public static void main(String[] args) throws IOException {
        System.out.println(new App().getGreeting());
        HttpServer server = HttpServer.create(new InetSocketAddress("0.0.0.0", 80), 0);

        server.createContext("/test", new myHandler());
        server.createContext("/home", new homePage());
        server.createContext("/say-hello", new sayHello());

        server.setExecutor(null); // creates a default executor
        server.start();
    }
    private static class myHandler implements HttpHandler {
        @Override
        public void handle(HttpExchange t) throws IOException {
            String response = "This is the response";
            t.sendResponseHeaders(200, response.length());
            OutputStream os = t.getResponseBody();
            os.write(response.getBytes());
            os.close();
        }
    }

    private static class sayHello implements HttpHandler {

        @Override
        public void handle(HttpExchange exchange) throws IOException {
            String resp = "Hello world!!!";
            exchange.sendResponseHeaders(200, resp.length());
            OutputStream os = exchange.getResponseBody();
            os.write(resp.getBytes());
            os.close();
        }
    }
    public static class homePage implements HttpHandler {

        @Override
        public void handle(HttpExchange exchange) throws IOException {
            InputStream is = getClass().getClassLoader().getResourceAsStream("index.html");

            assert is != null;
            Scanner fileStream = new Scanner(is);
            StringBuilder fileContents = new StringBuilder();
            while (fileStream.hasNext()){
                fileContents.append(fileStream.nextLine());
            }

            exchange.sendResponseHeaders(200, fileContents.toString().length());
            OutputStream os = exchange.getResponseBody();
            os.write(fileContents.toString().getBytes());
            os.close();
        }
    }
}
